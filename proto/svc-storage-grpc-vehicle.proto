syntax = "proto3";
package grpc.vehicle;

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "svc-storage-grpc.proto";

// Vehicle Model Type Enum
enum VehicleModelType {
    // VTOL Cargo
    VTOL_CARGO = 0;
    // VTOL Passenger
    VTOL_PASSENGER = 1;
}

// Response struct returning an [Object] on success and [ValidationResult] if invalid fields were provided
message Response {
    // struct with field -> error pairs to provide feedback about invalid fields
    grpc.ValidationResult validation_result = 1;
    // Object struct with id [`String`] in [`Uuid`](uuid::Uuid) format and [`Data`] struct with vehicle data
    optional Object object = 2;
}

// Object struct with `id` and `data` field
// * `id` [`String`] in [`Uuid`](uuid::Uuid) format
// * `data` [`Data`] struct with vehicle data
message Object {
    //id UUID v4
    string id = 1;
    //data
    Data data = 2;
}

// UpdateObject struct with `id`, `data` and `mask` fields
// * `id` [`String`] in [`Uuid`](uuid::Uuid) format
// * `data` [`Data`] struct with vehicle data which should be used for update
// * `mask` [`FieldMask`] struct with vehicle fields that should be updated
message UpdateObject {
    // `id` [`String`] in [`Uuid`](uuid::Uuid) format
    string id = 1;
    // struct with vehicle data which should be used for update
    Data data = 2;
    // struct with vehicle fields that should be updated
    google.protobuf.FieldMask mask = 3;
}

// Data struct with vehicle data
message Data {
    // vehicle_model_id UUID v4, can be used to collect additional vehicle_model information
    string vehicle_model_id = 1;
    // the vehicle's unique serial_number given at the factory
    string serial_number = 2;
    // the vehicle's unique registration number provided by the government
    string registration_number = 3;
    // optional additional description of the vehicle
    optional string description = 4;
    // optional asset_group_id UUID v4, can be used to collect all assets from the same group
    optional string asset_group_id = 5;
    // optional RRULE data string to indicate the vehicle's available days and hours
    optional string schedule = 6;
    // optional id UUID v4 of the last reported vertiport it landed at
    optional string last_vertiport_id = 7;
    // optional date of vehicle's last maintenance
    optional google.protobuf.Timestamp last_maintenance = 8;
    // optional date  of vehicle's next planned maintenance
    optional google.protobuf.Timestamp next_maintenance = 9;
    // timestamp of the date and time the vehicle has been created
    optional google.protobuf.Timestamp created_at = 10;
    // timestamp of the last update action performed on the data
    optional google.protobuf.Timestamp updated_at = 11;
}

// Struct containing a `list` of vehicle [Vec\<Object\>]
message List {
    // array/vector of vehicle items
    repeated Object list = 1;
}
