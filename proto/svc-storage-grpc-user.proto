syntax = "proto3";
package grpc.user;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "svc-storage-grpc.proto";

//UserRpc service
service UserRpc {
    rpc users(grpc.SearchFilter) returns (Users);
    rpc user_by_id(grpc.Id) returns (User);
    rpc insert_user(UserData) returns (User);
    rpc update_user(UpdateUser) returns (User);
    rpc delete_user(grpc.Id) returns (google.protobuf.Empty);
}

//Login Auth Method Enum
enum AuthMethod {
    //GOOGLE_SSO -- user uses Google account to log in (Google associated email account will be stored at first login)
    GOOGLE_SSO = 0;
    //PASSWORD -- user uses a self chosen password to log in (requires a verified e-mail address)
    PASSWORD = 1;
    //ONETIME_PASSWORD -- user requests login link every time they want to log in (requires a verified e-mail address)
    ONETIME_PASSWORD = 2;
    //WEB3 -- user uses a crypto wallet to login (Public wallet address will be stored at first login)
    WEB3 = 3;
    //APPLE ID -- user uses Apple ID account to log in (Apple associated email account will be stored at first login)
    APPLE_ID_SSO = 4;
}

//User
message User {
    // UUID v4
    string id = 1;
    UserData data = 2;
}

//UserData
message UserData {
    string first_name = 1;
    string last_name = 2;
    AuthMethod auth_method = 3;
}
message UpdateUser {
    //id UUID v4
    string id = 1;
    UserData data = 2;
    google.protobuf.FieldMask mask = 3;
}
//Users
message Users {
    repeated User users = 1;
}
