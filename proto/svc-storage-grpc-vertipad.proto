syntax = "proto3";
package grpc.vertipad;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "svc-storage-grpc.proto";

//Vertiport gRPC service
service RpcService {
    rpc get_all_with_filter(grpc.SearchFilter) returns (List);
    rpc get_by_id(grpc.Id) returns (Object);
    rpc insert(Data) returns (Response);
    rpc update(UpdateObject) returns (Response);
    rpc delete(grpc.Id) returns (google.protobuf.Empty);
}

message Response {
    grpc.ValidationResult validation_result = 1;
    optional Object object = 2;
}

message Object {
    //id UUID v4
    string id = 1;
    //data
    Data data = 2;
}

message UpdateObject {
    //id UUID v4
    string id = 1;
    Data data = 2;
    google.protobuf.FieldMask mask = 3;
}

message Data {
    // vertiport_id UUID v4, all vertipads are part of a vertiport, even if the vertiport has only 1 pad
    string vertiport_id = 1;
    string name = 2;
    double latitude = 3;
    double longitude = 4;
    bool enabled = 5;
    bool occupied = 6;
    optional string schedule = 7;
    //bool charging_enabled = 3;
    //float charging_rate_kw = 4;
    //string restrictions = 5;
}

message List {
    repeated Object list = 1;
}
