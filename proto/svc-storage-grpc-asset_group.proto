syntax = "proto3";
package grpc.asset_group;

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "svc-storage-grpc.proto";

// Response struct returning an [Object] on success and [ValidationResult] if invalid fields were provided
message Response {
    // struct with field -> error pairs to provide feedback about invalid fields
    grpc.ValidationResult validation_result = 1;
    // Object struct with id [`String`] in [`Uuid`](uuid::Uuid) format and [`Data`] struct with asset group data
    optional Object object = 2;
}

// Object struct with `id` and `data` field
// * `id` [`String`] in [`Uuid`](uuid::Uuid) format
// * `data` [`Data`] struct with asset group data
message Object {
    //id UUID v4
    string id = 1;
    //data
    Data data = 2;
}

// UpdateObject struct with `id`, `data` and `mask` fields
// * `id` [`String`] in [`Uuid`](uuid::Uuid) format
// * `data` [`Data`] struct with asset group data which should be used for update
// * `mask` [`FieldMask`] struct with asset group fields that should be updated
message UpdateObject {
    // `id` [`String`] in [`Uuid`](uuid::Uuid) format
    string id = 1;
    // struct with asset group data which should be used for update
    Data data = 2;
    // struct with asset group fields that should be updated
    google.protobuf.FieldMask mask = 3;
}

// Data struct with asset group data
message Data {
    // the asset group's name
    string name = 1;
    // the asset group's description
    string description = 2;
    // default vertiport schedule
    optional string default_vertiport_schedule = 3;
    // default aircraft schedule
    optional string default_aircraft_schedule = 4;
}

// Struct containing a `list` of asset group [`Vec\<Object\>`]
message List {
    // array/vector of asset group items
    repeated Object list = 1;
}
