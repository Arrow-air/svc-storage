syntax = "proto3";
package grpc.adsb;

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "svc-storage-grpc.proto";

// Response struct returning an [Object] on success and [ValidationResult] if invalid fields were provided
message Response {
    // struct with field -> error pairs to provide feedback about invalid fields
    ValidationResult validation_result = 1;
    // Object struct with id [String] in [Uuid](uuid::Uuid) format and [Data] struct with adsb data
    optional Object object = 2;
}

// Object struct with `id` and `data` field
// * `id` [String] in [Uuid](uuid::Uuid) format
// * `data` [Data] struct with adsb data
message Object {
    //id UUID v4
    string id = 1;
    //data
    Data data = 2;
}

// UpdateObject struct with `id`, `data` and `mask` fields
// * `id` [String] in [Uuid](uuid::Uuid) format
// * `data` [Data] struct with adsb data which should be used for update
// * `mask` [FieldMask] struct with adsb fields that should be updated
message UpdateObject {
    // `id` [String] in [Uuid](uuid::Uuid) format
    string id = 1;
    // struct with adsb data which should be used for update
    Data data = 2;
    // struct with adsb fields that should be updated
    google.protobuf.FieldMask mask = 3;
}

// Data struct with adsb data
message Data {
    // 24-bit ICAO Address
    int64 icao_address = 1;
    // ADS-B type code
    int64 message_type = 2;
    // timestamp of telemetry receipt by network
    google.protobuf.Timestamp network_timestamp = 3;
    // raw message payload
    bytes payload = 4;
}

// Struct containing a `list` of adsb [Vec\<Object\>]
message List {
    // array/vector of adsb items
    repeated Object list = 1;
}
